{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setReversed","sortedList","goods","visibleGoods","sort","product1","product2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","resetCondition","className","type","classNames","onClick","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,mBAAmBH,EAASI,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAkB,GAApD,mBAAOI,EAAP,KAAmBC,EAAnB,KAyBMC,EAvBoB,SACxBC,GAEA,IAAMC,EAAY,YAAOD,GAazB,OAXAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQT,GACN,KAAKL,EAASe,SACZ,OAAOF,EAASG,cAAcF,GAChC,KAAKd,EAASiB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OACpC,QACE,OAAO,MAITX,EACKI,EAAaQ,UAGfR,EAGUS,CACjBnB,GAGIoB,EAAiBhB,IAAaL,EAASI,OACzB,IAAfG,EAEL,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYnB,IAAaL,EAASe,WAEpCU,QAAS,kBAAMnB,EAAYN,EAASe,WALtC,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYnB,IAAaL,EAASiB,SAEpCQ,QAAS,kBAAMnB,EAAYN,EAASiB,SALtC,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAA2B,IAAfjB,IAEdkB,QAAS,kBAAMjB,GAAaD,IAL9B,qBAWEc,GACE,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPnB,EAAYN,EAASI,MACrBI,GAAY,IALhB,sBAaN,6BACGC,EAAWiB,KAAI,SAAAC,GAAO,OACrB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCzGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d63d78d1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n  const [isReversed, setReversed] = useState<boolean>(false);\n\n  const getReorderedGoods = (\n    goods: string[],\n  ) => {\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((product1, product2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return product1.localeCompare(product2);\n        case SortType.LENGTH:\n          return product1.length - product2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      return visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  const sortedList = getReorderedGoods(\n    goodsFromServer,\n  );\n\n  const resetCondition = sortType !== SortType.NONE\n    || isReversed === true;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': isReversed !== true,\n          })}\n          onClick={() => setReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {\n          resetCondition && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setReversed(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n      <ul>\n        {sortedList.map(product => (\n          <li data-cy=\"Good\" key={product}>\n            {product}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}